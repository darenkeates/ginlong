preferences {
  input( "userName", "string", title: "User Name", description: "Enter Ginlong user name", required: true )
  input( "userPassword", "password", title: "User Password", description: "Enter Ginlong password", required: true )
	input( "debugOutput", "bool", title: "Disable debugging?", required: false, defaultValue: false )
}

metadata {
  definition (name: "Solar Inverter", namespace: "Ginlong API", author: "") {
    capability "Refresh"
    capability 'Sensor'
    command 'getData'
  }
}
//Login function calling the m.ginlong http to establish connection
def login() {
  if (debugOutput) log.debug "Solar Panel - login"
  Map params = [
    uri:"http://m.ginlong.com/cpro/login/validateLogin.json?userName=${userName}&password=${userPassword}&lan=2&domain=m.ginlong.com&userType=C",
    contentType:'application/x-javascript',
    requestContentType:'application/json',
    headers:[
      'accept':'application/json',
      'accept-language':"en-GB,en;q=0.5",
      'upgrade-insecure-requests':"1",
      'user-agent':"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/70.0.3538.102 Safari/537.36 Edge/18.18362",
      'accept-encoding':"gzip, deflate, br, peerdist","x-p2p-peerdist":"Version=1.1","x-p2p-peerdistex":"MinContentInformation=1.0, MaxContentInformation=2.0",
      'cookie':device.data.cookiess
    ]
  ]
  if (debugOutput) {log.debug "Params: $params.headers $params.body"}
  device.data.cookiess = ''
  try {
    httpGet(params) { 
      response ->
        log.debug "Request was successful, $response.data"    
        String allCookies = ""
        response.getHeaders('Set-Cookie').each {
        String cookie = it.value.split(';|,')[0]
        Boolean skipCookie = false
        def expireParts = it.value.split('expires=')
        try {
          def cookieSegments = it.value.split(';')
          for (int i = 0; i < cookieSegments.length; i++) {
            def cookieSegment = cookieSegments[i]
            String cookieSegmentName = cookieSegment.split('=')[0]  
            if (cookieSegmentName.trim() == "expires") {
              String expiration = cookieSegment.split('=')[1]
              Date expires = new Date(expiration)
              Date newDate = new Date() // right now              
              if (expires < newDate) {
                skipCookie = true
                if (debugOutput) log.debug "-skip cookie: $it.value"
              } else {
                if (debugOutput) log.debug "+not skipping cookie: expires=$expires. now=$newDate. cookie: $it.value"
              }
            }
          }
        } catch (e) {
          if (debugOutput) log.debug "!error when checking expiration date: $e ($expiration) [$expireParts.length] {$it.value}"
        }
